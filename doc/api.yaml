---
openapi: 3.0.0
paths:
  "/":
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags:
        - Base
  "/user":
    get:
      operationId: UserController_getUsers
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserEntity"
      tags:
        - Users
    post:
      operationId: UserController_createUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateUserDto"
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserEntity"
      tags:
        - Users
  "/user/{id}":
    get:
      operationId: UserController_getUserById
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserEntity"
      tags:
        - Users
    put:
      operationId: UserController_updateUser
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateUserDto"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserEntity"
      tags:
        - Users
    delete:
      operationId: UserController_deleteUser
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - Users
  "/artist":
    get:
      operationId: ArtistController_getArtists
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ArtistEntity"
      tags:
        - Artists
    post:
      operationId: ArtistController_createArtist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateArtistDto"
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArtistEntity"
      tags:
        - Artists
  "/artist/{id}":
    get:
      operationId: ArtistController_getArtistById
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArtistEntity"
      tags:
        - Artists
    put:
      operationId: ArtistController_updateArtist
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateArtistDto"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArtistEntity"
      tags:
        - Artists
    delete:
      operationId: ArtistController_deleteArtist
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - Artists
  "/track":
    get:
      operationId: TrackController_getTracks
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TrackEntity"
      tags:
        - Tracks
    post:
      operationId: TrackController_createTrack
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateTrackDto"
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrackEntity"
      tags:
        - Tracks
  "/track/{id}":
    get:
      operationId: TrackController_getTrackById
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrackEntity"
      tags:
        - Tracks
    put:
      operationId: TrackController_updateTrack
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateTrackDto"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrackEntity"
      tags:
        - Tracks
    delete:
      operationId: TrackController_deleteTrack
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - Tracks
  "/album":
    get:
      operationId: AlbumController_getTracks
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AlbumEntity"
      tags:
        - Albums
    post:
      operationId: AlbumController_createAlbum
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateAlbumDto"
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlbumEntity"
      tags:
        - Albums
  "/album/{id}":
    get:
      operationId: AlbumController_getTrackById
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlbumEntity"
      tags:
        - Albums
    put:
      operationId: AlbumController_updateAlbum
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateAlbumDto"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlbumEntity"
      tags:
        - Albums
    delete:
      operationId: AlbumController_deleteAlbum
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - Albums
  "/favs":
    get:
      operationId: FavoriteController_getFavorites
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Favorites
  "/favs/track/{id}":
    post:
      operationId: FavoriteController_addTrack
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - Favorites
    delete:
      operationId: FavoriteController_deleteTrack
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favorites
  "/favs/album/{id}":
    post:
      operationId: FavoriteController_addAlbum
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - Favorites
    delete:
      operationId: FavoriteController_deleteAlbum
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favorites
  "/favs/artist/{id}":
    post:
      operationId: FavoriteController_addArtist
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - Favorites
    delete:
      operationId: FavoriteController_deleteArtist
      parameters:
        - name: id
          required: false
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favorites
info:
  title: Nodejs2022Q4 Service
  description: ''
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    UserEntity:
      type: object
      properties:
        login:
          type: string
        version:
          type: object
          default: 1
        createdAt:
          type: number
          default: 1675507378329
        updatedAt:
          type: number
          default: 1675507378329
        id:
          type: string
          default: d1c07e50-7de9-467a-8c5b-29ce7bfc4c7b
        password:
          type: string
      required:
        - login
        - version
        - createdAt
        - updatedAt
        - id
        - password
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password
    UpdateUserDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword
    ArtistEntity:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
        id:
          type: string
          default: d9effdb6-1917-4891-abc2-78b1e8437406
      required:
        - name
        - grammy
        - id
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    TrackEntity:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          nullable: true
        albumId:
          type: string
          nullable: true
        duration:
          type: number
        id:
          type: string
          default: 8f5035a7-88bc-48b0-ae29-c0078cf14fb2
      required:
        - name
        - artistId
        - albumId
        - duration
        - id
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          nullable: true
        albumId:
          type: string
          nullable: true
        duration:
          type: number
      required:
        - name
        - artistId
        - albumId
        - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          nullable: true
        albumId:
          type: string
          nullable: true
        duration:
          type: number
      required:
        - name
        - artistId
        - albumId
        - duration
    AlbumEntity:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          nullable: true
        id:
          type: string
          default: d0c3f4b6-0047-4c26-a661-41c4b6835090
      required:
        - name
        - year
        - artistId
        - id
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          nullable: true
      required:
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          nullable: true
      required:
        - name
        - year
        - artistId
